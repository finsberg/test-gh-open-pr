name: pygscholar
description: Add new publications from Google scholar

inputs:
  name:
    description: "Name of the author"
    required: true
    default: "Henrik Finsberg"
  scholar_id:
    description: "Google Scholar ID"
    required: true
    default: "NDPIHoEAAAAJ"  # Henrik Finsberg
  cache_dire:
    description: "Folder to store cache files"
    required: false
    default: ".pygscholar"

outputs:
  has_new_publications:
    description: "Whether we have new publications"
    value: ${{ steps.has_new_publications.outputs.has_new_publications }}
  title:
    description: "Title of the new publication"
    value: ${{ steps.has_new_publications.outputs.title }}
  # authors:
  #   description: "Authors of the new publication"
  # year:
  #   description: "Year of the new publication"
  # date:
  #   description: "Date of the new publication"
  # abstract:
  #   description: "Abstract of the new publication"
  # journal:
  #   description: "Journal of the new publication"
  # volume:
  #   description: "Volume of the new publication"
  # pdf_url:
  #   description: "URL to the PDF of the new publication"


runs:
  using: composite
  steps:
    - name: Install dependencies
      shell: bash -el {0}
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install pygscholar

    - name: Get new publications
      shell: bash -el {0}
      run: |
        python3 -m pygscholar --overwrite --cache_dir ${{ inputs.cache_dir }} ${{ inputs.name }} --save-diff diff.json
q
    - name: Check if we have new publications
      id: has_new_publications
      shell: bash
      run: |
          export NEW_PUBS=$(python3 -c "import json; print(len(json.load(open('diff.json'))))")
          if [ $NEW_PUBS -gt 0 ]; then
            echo "has_new_publications=true" >> $GITHUB_OUTPUT
            echo "title=$(python3 -c "import json; print(json.load(open('diff.json'))[0]['title'])")" >> $GITHUB_OUTPUT
          else
            echo "has_new_publications=false" >> $GITHUB_OUTPUT
          fi

  
    - name: Commit report
      if: ${{ steps.has_new_publications.outputs.has_new_publications }}
      shell: bash -el {0}
      run: |
        git config --global user.name 'SholarBot'
        git config --global user.email '
        git checkout -B scholar-bot-update
        git add ${{ inputs.cache_dir }}
        git commit -m "Update report"
        git push origin scholar-bot-update -f

    - name: Create pull request
      if: ${{ steps.has_new_publications.outputs.has_new_publications }}
      shell: bash -el {0}
      run: |
        gh pr create -B main -H scholar-bot-update --title 'Merge scholar-bot-update into main' --body 'Created by Github action'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}